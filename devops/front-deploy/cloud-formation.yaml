AWSTemplateFormatVersion: "2010-09-09"

Description: Static website

Parameters:
  DomainName:
    Description: Domain name of website
    Type: String
  HostedZoneName:
    Description: HostedZone name of website
    Type: String
  CertificateArn:
    Description: Certificate
    Type: String

Resources:
  S3BucketLogs:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: LogDeliveryWrite
      BucketName:
        Fn::Sub: "${AWS::StackName}-logs-${AWS::AccountId}"

  S3BucketRoot:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: PublicRead
      BucketName:
        Fn::Sub: "${AWS::StackName}-root-${AWS::AccountId}"
      LoggingConfiguration:
        DestinationBucketName:
          Ref: S3BucketLogs
        LogFilePrefix: "cdn/"
      WebsiteConfiguration:
        ErrorDocument: "index.html"
        IndexDocument: "index.html"

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: S3BucketRoot
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "s3:GetObject"
            Principal: "*"
            Resource:
              Fn::Sub: "${S3BucketRoot.Arn}/*"

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
        CustomErrorResponses:
          - ErrorCachingMinTTL: 60
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: "/index.html"
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          DefaultTTL: 86400
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: true
          MaxTTL: 31536000
          SmoothStreaming: false
          TargetOriginId: !Sub "S3-${AWS::StackName}-root"
          ViewerProtocolPolicy: "redirect-to-https"
        DefaultRootObject: "index.html"
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Logging:
          Bucket: !GetAtt S3BucketLogs.DomainName
          IncludeCookies: false
          Prefix: "cdn/"
        Origins:
          - CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginKeepaliveTimeout: 5
              OriginProtocolPolicy: "https-only"
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
            DomainName: !GetAtt S3BucketRoot.DomainName
            Id: !Sub "S3-${AWS::StackName}-root"
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: #'{{resolve:ssm:/cartos/infra/certificate/arn}}'
            Ref: CertificateArn
          MinimumProtocolVersion: TLSv1.1_2016
          SslSupportMethod: sni-only

  Route53RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub "${HostedZoneName}."
      RecordSets:
        - Name: !Ref DomainName
          Type: A
          AliasTarget:
            DNSName: !GetAtt CloudFrontDistribution.DomainName
            EvaluateTargetHealth: false
            HostedZoneId: Z2FDTNDATAQYW2

  SSMS3BucketName:
    Type: AWS::SSM::Parameter
    Properties:
      Name:
        Fn::Sub: "/front/${AWS::StackName}/s3-bucket"
      Type: String
      Value:
        Ref: S3BucketRoot

  SSMS3BucketLogsDomainName:
    Type: AWS::SSM::Parameter
    Properties:
      Name:
        Fn::Sub: "/front/${AWS::StackName}/s3-bucket-logs-domain"
      Type: String
      Value: !GetAtt S3BucketLogs.DomainName

  SSMS3BucketDomainName:
    Type: AWS::SSM::Parameter
    Properties:
      Name:
        Fn::Sub: "/front/${AWS::StackName}/s3-bucket-domain"
      Type: String
      Value: !GetAtt S3BucketRoot.DomainName

  SSMCloudFrontDistribution:
    Type: AWS::SSM::Parameter
    Properties:
      Name:
        Fn::Sub: "/front/${AWS::StackName}/cloudfront-distribution-id"
      Type: String
      Value:
        Ref: CloudFrontDistribution
