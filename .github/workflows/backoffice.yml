name: Deploy BackOffice

on:
  workflow_call:
    inputs:
      theme:
        required: false
        type: string
      modules:
        required: false
        type: string
      directory:
        required: false
        type: string
    secrets:
      AWS_KEY:
        required: true
      AWS_SECRET:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      my_secrets: ${{ steps.set_secrets.outputs.my_secrets }}
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: yarn install --production=false
        env:
          NODE_ENV: "development"
          GENERATE_SOURCEMAP: "false"

      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-region: us-east-1

      - name: AWS - SSM Get Parameters
        uses: dkershner6/aws-ssm-getparameters-action@v1
        with:
          parameterPairs: "
            /cartos/infra/certificate/arn = AWS_CERTIFICATE_ARN,
            /cartos/infra/certificate/domain = AWS_DOMAIN,
            /cartos/infra/api-gateway/domain = AWS_API_DOMAIN,
            /finfy/infra/api-gateway-backoffice/domain = AWS_API_BKO_DOMAIN,
            /cartos/store-sellers/api-gateway/domain = AWS_STORE_API_DOMAIN"
          withDecryption: "false" # defaults to true

      - name: Build
        run: yarn build
        env:
          NODE_ENV: "development"
          FRONT_STG: "development"
          THEME: "${{ inputs.theme }}"
          MODULES: "${{ inputs.modules }}"
          GENERATE_SOURCEMAP: "false"
          CI: "false"
          REACT_APP_API_BKO_GATEWAYY: "https://${{ env.AWS_API_BKO_DOMAIN }}"
          REACT_APP_API_GATEWAY: "https://${{ env.AWS_API_DOMAIN }}"
          REACT_APP_SPB_SPI: "https://api.spb.cartos.solutions"
          REACT_APP_SPI: "https://api.spi.cartos.solutions"
          REACT_APP_SHIPPING: "https://boletos.cartos.staging.luby.com.br" # Remessa
          REACT_APP_SITE: "https://api.site.cartos.com.br/graphql"
          REACT_APP_SHOPKEEPER_API_GATEWAY: "https://${{ env.AWS_STORE_API_DOMAIN }}"

      - name: Move dist
        if: "${{ inputs.directory != '' }}"
        run: |
          mkdir dist-temp
          mv ./dist ./dist-temp/${{ inputs.directory }}
          mv ./dist-temp ./dist

      - name: Deploy
        # uses: ./devops/front-deploy
        # uses: cartos-devs/github-actions/.github/workflows/deploy-front.yml@main
        uses: cartos-devs/github-actions/devops/front-deploy@main
        with:
          stackName: finfy-backoffice
          folder: dist
          subdomain: backoffice
          hostedZoneName: ${{ env.AWS_DOMAIN }}
          certificateArn: ${{ env.AWS_CERTIFICATE_ARN }}

  # deploy:
  #   uses: cartos-devs/github-actions/.github/workflows/deploy-front.yml@main
  #   with:
  #     stackName: finfy-backoffice
  #     folder: dist
  #     subdomain: backoffice
  #     hostedZoneName: ${{ env.AWS_DOMAIN }}
  #     certificateArn: ${{ env.AWS_CERTIFICATE_ARN }}
